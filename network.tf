resource "aws_vpc" "mw_detector_vpc" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = "true"
  enable_dns_hostnames = "true"
}
resource "aws_default_security_group" "default" {
  vpc_id = aws_vpc.mw_detector_vpc.id

  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}


resource "aws_subnet" "public_subnet" {
  vpc_id                  = aws_vpc.mw_detector_vpc.id
  cidr_block              = "10.0.192.0/18"
  availability_zone       = "eu-central-1a"
  map_public_ip_on_launch = true
}

resource "aws_subnet" "private_subnet" {
  vpc_id            = aws_vpc.mw_detector_vpc.id
  cidr_block        = "10.0.128.0/18"
  availability_zone = "eu-central-1a"
}
resource "aws_subnet" "private_subnet2" {
  vpc_id            = aws_vpc.mw_detector_vpc.id
  cidr_block        = "10.0.0.0/17"
  availability_zone = "eu-central-1a"
}

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.mw_detector_vpc.id
}

resource "aws_nat_gateway" "nat_mw" {
  subnet_id     = aws_subnet.public_subnet.id
  allocation_id = aws_eip.nat_eip.id
}
resource "aws_eip" "nat_eip" {
  vpc = true
}


// public route table
resource "aws_route_table" "route_table_public" {
  vpc_id = aws_vpc.mw_detector_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }

}

resource "aws_route_table_association" "route_table_association_public" {
  subnet_id      = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.route_table_public.id
}

//private route table

resource "aws_route_table" "route_table_private" {
  vpc_id = aws_vpc.mw_detector_vpc.id

  route {
    cidr_block     = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.nat_mw.id
  }

}

resource "aws_route_table_association" "route_table_association_private" {
  subnet_id      = aws_subnet.private_subnet.id
  route_table_id = aws_route_table.route_table_private.id
}


// S3 endpoint
resource "aws_vpc_endpoint" "s3" {
  vpc_id       = aws_vpc.mw_detector_vpc.id
  service_name = "com.amazonaws.eu-central-1.s3"
}

resource "aws_vpc_endpoint_route_table_association" "vpce_association" {
  route_table_id  = aws_vpc.mw_detector_vpc.main_route_table_id
  vpc_endpoint_id = aws_vpc_endpoint.s3.id
}
// SNS endpoint
resource "aws_vpc_endpoint" "sns" {
  vpc_id              = aws_vpc.mw_detector_vpc.id
  service_name        = "com.amazonaws.eu-central-1.sns"
  vpc_endpoint_type   = "Interface"
  private_dns_enabled = true
  subnet_ids          = [aws_subnet.private_subnet2.id]
}

resource "aws_vpc_endpoint_subnet_association" "sns_assoc" {
  subnet_id       = aws_subnet.private_subnet2.id
  vpc_endpoint_id = aws_vpc_endpoint.sns.id
}
// SQS endpoint

resource "aws_vpc_endpoint" "sqs" {
  vpc_id              = aws_vpc.mw_detector_vpc.id
  service_name        = "com.amazonaws.eu-central-1.sqs"
  vpc_endpoint_type   = "Interface"
  private_dns_enabled = true
  subnet_ids          = [aws_subnet.private_subnet2.id]
}
resource "aws_vpc_endpoint_subnet_association" "sqs_assoc" {
  subnet_id       = aws_subnet.private_subnet2.id
  vpc_endpoint_id = aws_vpc_endpoint.sqs.id
}